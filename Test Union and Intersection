package BagProject;

public class LinkedBag
{

			Node head;
			class Node 
		{
			int data;
			Node next;
			Node(int d)
		{
			data = d;
			next = null;
		}
		}
			void getUnion(Node head1, Node head2)
		{
			Node t1 = head1, t2 = head2;
			while (t1 != null) 
		{
			push(t1.data);
			t1 = t1.next;
		}
			while (t2 != null) 
		{
			if (!isPresent(head, t2.data))
			push(t2.data);
			t2 = t2.next;
		}
		}
			void getIntersection(Node head1, Node head2)
		{
			Node result = null;
			Node t1 = head1;
			while (t1 != null) 
		{
			if (isPresent(head2, t1.data))
			push(t1.data);
			t1 = t1.next;
		}
		}
			void printBag()
		{
			Node temp = head;
			while (temp != null) 
		{
			System.out.print(temp.data + " ");
			temp = temp.next;
		}
			System.out.println();
		}
			void push(int new_data)
		{
			Node new_node = new Node(new_data);
			new_node.next = head;
			head = new_node;
		}
			boolean isPresent(Node head, int data)
		{
			Node t = head;
			while (t != null) {
			if (t.data == data)
			return true;
			t = t.next;
		}
			return false;
			}
			public static void main(String args[])
		{
			LinkedBag llist1 = new LinkedBag();
			LinkedBag llist2 = new LinkedBag();
			LinkedBag unin = new LinkedBag();
			LinkedBag intersecn = new LinkedBag();
			llist1.push(20);
			llist1.push(4);
			llist1.push(15);
			llist1.push(10);
			llist2.push(10);
			llist2.push(2);
			llist2.push(4);
			llist2.push(8);
			intersecn.getIntersection(llist1.head, llist2.head);
			unin.getUnion(llist1.head, llist2.head);
			System.out.println("First Bag is");
			llist1.printBag();
			System.out.println("Second Bag is");
			llist2.printBag();
			System.out.println("Intersection Bag is");
			intersecn.printBag();
			System.out.println("Union Bag is");
			unin.printBag();
		}
			
	}


